@charset "UTF-8";
:root {
	--cover-ratio: 0.6625;
}

body {
	background-color: #000;	
}

.input-group {
	display: inline-flex;
	box-shadow: 0 .25rem .5rem rgba(0, 0, 0, .125);
	margin: 4px;
	width: initial;
	vertical-align: middle;	
}
.input-group label+label {
	margin: 0 0 0 -1px;
}
.input-group label:not(:first-child) span {
	border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}
.input-group label:not(:last-child) span {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}
/* Customize the label (the container) */
label.input, .input-group label {
	cursor: pointer;
	display: inline-block;
	margin: 0;
	vertical-align: middle;
}
/* Hide the browser's default checkbox */
label.input input, .input-group input {
	display: none;
}
/* Create a custom checkbox */
label.input span, .input-group span {
	background-color: #eee;
	border: 1px solid transparent;
	border-radius: .2rem;
	box-shadow: 0 .125rem .25rem rgba(0, 0, 0, .125);
	color: #212529;
	font-soze: 1rem;
	font-weight: 700;
    padding: .375rem .75rem;
   	transition: all .3s;
}
.input-group > label > span {
	box-shadow: none;
}
/* size */
label.input.sm span, .input-group.sm span {
	font-size: 0.875rem;
	line-height: 1.5;
	padding: .25rem .5rem;
}
/* Create a custom radio */
label.input > input[type='radio'] ~ span, .input-group > label > input[type='radio'] ~ span {
	border-radius: 0.5rem;
}

/* On mouse-over, add a grey background color */
label.input:hover input ~ span, .input-group > label:hover input ~ span {
	background-color: #ccc;
	border-color: #ccc;
	box-shadow: 0 .25rem .5rem rgba(0, 0, 0, .25);
}
/* When the checkbox is checked, add a blue background */
label.input input:checked ~ span, .input-group input:checked ~ span {
	color: var(--light);
	background-color: midnightblue;
	border-color: midnightblue;
	box-shadow: 0 .25rem .5rem rgba(0, 0, 0, .25);
}
/* color */
label.input.primary input:checked ~ span, .input-group.primary input:checked ~ span {
	background-color: var(--primary);
	border-color: var(--primary);
}
label.input.success input:checked ~ span, .input-group.success input:checked ~ span {
	background-color: var(--success);
	border-color: var(--success);
}
label.input.info input:checked ~ span, .input-group.info input:checked ~ span {
	background-color: var(--info);
	border-color: var(--info);
}
label.input.warning input:checked ~ span, .input-group.warning input:checked ~ span {
	background-color: var(--warning);
	border-color: var(--warning);
}
label.input.danger input:checked ~ span, .input-group.danger input:checked ~ span {
	background-color: var(--danger);
	border-color: var(--danger);
}
label.input.dark input:checked ~ span, .input-group.dark input:checked ~ span {
	background-color: var(--dark);
	border-color: var(--dark);
}

/* input search */
input.search {
	background-color : #fafafa;
	border: 1px solid #eee;
	border-radius: .25rem;
	box-shadow: 0 .125rem .25rem rgba(0, 0, 0, .125);
	color: #333; 
	margin: 0 4px;
	padding: .125rem .5rem;
	height: 27px;
	width: 150px;
	transition: all .3s;
	vertical-align: middle;
}
input.search.dark {
	background-color: var(--dark);
	border-color: var(--gray-dark);
	color: var(--light);
}
input.search:focus, input.search:hover {
	border-color: var(--gray-dark);
	box-shadow: 0 .25rem .5rem rgba(0, 0, 0, .25);
	outline: none;
}
input.search:focus, input.search.dark:hover {
	border-color: var(--light);
}

/* input range ranker */
label.range {
	display: inline-flex;
	background-color: var(--light);
	border-radius: .5rem;
	border: 1px solid transparent;
	box-shadow: 0 .125rem .25rem rgba(0, 0, 0, .125);
	margin: 0;
	padding: 0 0 0 .25rem;
	transition: all .3s;
	vertical-align: middle;
}
label.range > input[type='range'] {
	/* display: inline-block; */
	width: 150px;
}
label.range input[type='range'] ~ span {
	padding: 1px 6px;
	display: table-cell;
	font-weight: 700;
}
label.range.dark {
	background-color: var(--dark);
	border-color: var(--gray-dark);
}
label.range.dark input[type='range'] ~ span {
	color: var(--light);
}

/* custom input range */
.ranker {
    display: inline-flex;
    background-color: #fafafa;
    border-radius: .75rem;
	border: 1px solid #eee;
    box-shadow: 0 .125rem .25rem rgba(0, 0, 0, .125);
    margin: 4px;
    width: initial;
	transition: all .3s;
	vertical-align: middle;
}
.ranker:hover {
	box-shadow: 0 .25rem .5rem rgba(0, 0, 0, .25);
}
.ranker.dark {
	background-color: #212529;
	color: #fafafa;
}
.ranker input {
	display: none;
}
.ranker > label:first-child {
	margin: 0  4px 0 4px;
	padding: 0;
	padding-top: 3px;
}
.ranker > label {
	cursor: pointer;
	margin: 0 4px 0 0;
	padding: 0;
	padding-top: 3px;
}
.ranker input ~ i {
	color: #e0e0e0;
	transition: all .3s;
	font-size: 20px;
}
.ranker:hover input ~ i {
	color: #ccc;
}
.ranker input:checked ~ i.r-1, .ranker input ~ i.r-1:hover {
	color: rgba(0, 0, 255, .75);
}
.ranker input:checked ~ i.r0, .ranker input ~ i.r0:hover {
	color: rgba(0, 255, 0, .3);
}
.ranker input:checked ~ i.r1, .ranker input ~ i.r1:hover {
	color: rgba(255, 0, 0, .15);
}
.ranker input:checked ~ i.r2, .ranker input ~ i.r2:hover {
	color: rgba(255, 0, 0, .3);
}
.ranker input:checked ~ i.r3, .ranker input ~ i.r3:hover {
	color: rgba(255, 0, 0, .45);
}
.ranker input:checked ~ i.r4, .ranker input ~ i.r4:hover {
	color: rgba(255, 0, 0, .6);
}
.ranker input:checked ~ i.r5, .ranker input ~ i.r5:hover {
	color: rgba(255, 0, 0, .75);
}

/* label text */
label.text {
	background-color: #fafafa;
	border: 1px solid transparent;
	border-radius: .25rem;
	box-shadow: 0 .125rem .25rem rgba(0, 0, 0, .125);
	color: #212529;
	font-weight: 700;
	margin: 4px 2px;
	padding: .125rem .5rem;
	transition: all .3s;
}
label.text.dark {
	background-color: #212529;
	color: #fafafa;
}
label.text.primary {
	background-color: var(--primary);
	color: var(--light);
}
label.text.success {
	background-color: var(--success);
	color: var(--light);
}
label.text.info {
	background-color: var(--info);
	color: var(--light);
}
label.text.warning {
	background-color: var(--warning);
	color: var(--dark);
}
label.text.danger {
	background-color: var(--danger);
	color: var(--light);
}
label.text.hover:hover {
 	text-shadow: 1px 1px 2px #a9a3a3;
	box-shadow: 0 .25rem .5rem rgba(0, 0, 0, .25);
}
label.text.dark.hover:hover {
	text-shadow: 1px 1px 0 #000000;
    box-shadow: 0 0.125rem 0.25rem rgba(255, 255, 255, .25);
    background-color: #103356;	
}
label.text:empty {
	display: none;
}
label.text.sm {
	font-size: 0.875rem;
	line-height: 1.5;
}

.nowrap {
	width: inherit;
	overflow-x: hidden;
	overflow-y: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	vertical-align: bottom;
}

.divider {
	width: 1rem;
	display: inline-flex;
}

.hover {
	cursor: pointer;
	transition: .2s;
}
.hover:hover {
	text-shadow: 0 1px 2px var(--light);
}

/* layout */
#overlay {
	position: fixed;
	display: none;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: rgba(0, 0, 0, .5);
	z-index: 9999;
	cursor: pointer;
}
#overlay > #overlay_body {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	-ms-transform: translate(-50%, -50%);
	color: white;
	font-size: 3rem;
}
.overlay-error-body {
	font-size: 2rem;
	color: var(--danger);
}

/* side nav */
.sidenav {
    height: 100%; /* 100% Full-height */
    width: 0; /* 0 width - change this with JavaScript */
    position: fixed; /* Stay in place */
    z-index: 9998; /* Stay on top */
    top: 0; /* Stay at the top */
    left: 0;
    background-color: rgba(17, 17, 17, 0.75); /* Black*/
    overflow: hidden; /* Disable horizontal scroll */
    transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
    padding-top: 50px;
    
}
.sidenav:hover {
	width: 200px;
}
.sidenav > .sidenav-openbtn {
	position: fixed;
	top: 0;
	left: 0;
	width: 50px;
	height: 50px;
	z-index: 9999;
	font-size: 2rem;
	cursor: pointer;
	padding-left: 4px;
}
.sidenav > .sidenav-openbtn > i {
	opacity: 0;
	transition: all .5s;
}
.sidenav > .sidenav-openbtn:hover > i {
	opacity: 1;
}
.sidenav > h4 {
	text-align: center;
}
.sidenav > h4 > a:hover {
	color: #ee0;
	text-decoration: none;
}
.sidenav > .nav {
	margin-top: 1rem;
}
.sidenav > .nav > .nav-item {
	color: #007bff;
	padding: 0.5rem;
	min-height: 2.5rem;
}
.sidenav > .nav > .nav-item > i.fa {
	width: 1rem;
	text-align: center;
	margin-right: .5rem;
}
.sidenav > .nav > .nav-item:hover > i.fa {
	color: #ee0;
}
.sidenav > .nav > .nav-item > label[aria-include] {
	cursor: pointer;
	margin-bottom: 0;
}
.sidenav > .nav > .nav-item > label[aria-include].active {
	color: #ee0;
}
.sidenav > .nav > .nav-item > label:hover {
	color: #eee;
}
.sidenav > .nav > .nav-item > a {
	color: inherit;
}
.sidenav > .nav > .nav-item > a:hover {
	color: #eee;
	text-decoration: none;
}
.sidenav input[type="color"] {
	background-color: transparent;
    border: 1px solid #fff;
    border-radius: .25rem;
    margin-left: .5rem;
    padding: 0;
    width: 50px;
}
.sidenav input[type="color"]:hover {
	cursor: pointer;
}

#wrap_background_image {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	margin: 0;
	padding: 0;
	z-index: -5;
}

#background_images {
	background-color: rgba(0, 0, 0, .5);
	height: 100%;
	margin: 0;
	padding: 0 1rem;
	z-index: -4;
}

#background_images.transparent {
	background-color: transparent;
}

#background_images .col {
	z-index: -3;
}
#background_images img {
	cursor: pointer;
	margin-top: 2rem;
	width: inherit;
	transition: height 1s;
	z-index: -2;
}

.bg-chalkboard {
	background: #000 url(/img/chalkboard.jpg) no-repeat top center; 
	background-size: cover; 
	background-attachment: fixed;
}
.bg-chalkboard.card-body {
	border-radius: .25rem;
}
.bg-chalkboard * {
	color: #eee;
	font-weight: 700;
	font-family: 'Ink Free';
}
.bg-chalkboard .progress {
	background-color: rgba(255, 255, 255, .125);
}
.bg-chalkboard .progress-bar {
	background: #fff url(/img/pattern/pattern-static.png);
	border-top-right-radius: 0.25rem;
	border-bottom-right-radius: 0.25rem;
}
.bg-chalkboard .text-dark {
	color: #b0b0ff !important;
}
.bg-chalkboard thead th {
	color: #d7e478;
}
.bg-chalkboard tfoot th {
	color: #20b67a;
}
.bg-chalkboard .hover:hover {
	-webkit-mask-image: url(/img/pattern/pattern-static.png);
	text-shadow: 0 0 2px #fff, 0 0 4px #fff, 0 0 6px #fff, 0 0 8px #999999, 0 0 10px #000000;
}

#wrap_body {
	z-index: 1;
	transition: margin-left 0.5s;
}

#wrap_body > div {
	z-index: 74;
}


#pageContent {
	margin-top: 56px;
	padding-top: .5rem;
}

.fixed-center {
	position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

.content-box {
	background-color: rgba(0, 0, 0, .75);
	border-radius: .5rem;
    border: 1px solid #fff;
	margin: .5rem;	
	padding: .5rem;
	color: #fff;
}

.favorite {
	color: red !important;
}
.nonExist {
 	color: #747474 !important;
}

.btn:focus, .custom-select:focus, .form-control:focus, .page-link:focus {
	box-shadow: none;
}


/* default color for bootstrap 4 */
.page-item.active .page-link {
    background-color: midnightblue;
    border-color: midnightblue;
}
.page-link {
	color: midnightblue;
}
.btn-link, .btn-link:hover {
    color: midnightblue;
}
.img-thumbnail {
    background-color: transparent;
}

/* dark theme */
body.bg-dark ul.pagination .page-item .page-link {
	background-color: #212529;
	color: #fafafa;
}
body.bg-dark ul.pagination .page-item.active .page-link {
	border-color: #dee2e6;
	background-color: #000;
}
body.bg-dark .btn-link {
	color: #fafafa;
}
body.bg-dark nav.navbar, body.bg-dark ul.pagination, body.bg-dark .bg-light {
	background-color: #2d2d2d !important;
}

body.bg-dark .fa-plus:before, body.bg-dark .fa-ellipsis-v:before {
    text-shadow: 0 0 .25rem antiquewhite;
}
body.bg-dark .card, body.bg-dark label.text {
	background-color: var(--dark);
	color: var(--light);
}
body.bg-dark th, body.bg-dark td {
	color: var(--light);
}